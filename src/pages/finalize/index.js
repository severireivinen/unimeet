import Head from "next/head";
import Header from "../../components/Header";
import { CameraIcon } from "@heroicons/react/solid";
import { Formik, Form, Field, ErrorMessage } from "formik";
import * as Yup from "yup";
import { useRef, useState } from "react";
import Input from "../../components/Formik/Input";
import dynamic from "next/dynamic";
import TextError from "../../components/Formik/TextError";
const CustomSelect = dynamic(
  () => import("../../components/Formik/CustomSelect"),
  { ssr: false }
);

export default function Finalize() {
  const [selectedFile, setSelectedFile] = useState(null);
  const [isSubmitting, setIsSubmitting] = useState(false);
  const filePickerRef = useRef(null);

  const schools = [
    { value: "metropolia", label: "Metropolia" },
    { value: "laurea", label: "Laurea" },
    { value: "univeristy-of-helsinki", label: "Helsingin yliopisto" },
    { value: "haaga-helia", label: "Haaga-Helia" },
    { value: "xamk", label: "XAMK" },
    { value: "school-of-life", label: "Elämämkoulu" },
  ];

  return (
    <div>
      <Head>
        <title>Unimeet</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />

      <Formik
        initialValues={{
          name: "",
          email: "",
          school: "",
          age: "",
          gender: "",
          lookingForGender: "",
          lookingForSchools: [],
          image: "",
        }}
        validationSchema={Yup.object({
          name: Yup.string().required("Nimi vaaditaan"),
          email: Yup.string()
            .email("Virheellinen sähköpostiosite")
            .required("Sähköposti vaaditaan"),
          school: Yup.string().required("Koulu vaaditaan"),
          age: Yup.number()
            .positive()
            .integer()
            .required("Ikä vaaditaan")
            .min(18, "Sinun täytyy olla vähintään 18")
            .max(60, "Yli 60 vuotias ei ole opiskelija..."),
          gender: Yup.string().required("Sukupuoli vaaditaan"),
          lookingForGender: Yup.string().required("Kerro ketä etsit"),
          lookingForSchools: Yup.array()
            .required("Vähintään yksi koulu valittava")
            .min(1, "Vähintään yksi koulu valittava"),
          image: Yup.string().required("Kuva vaaditaan"),
        })}
        onSubmit={(values) => {
          console.log("Values: ", values);
        }}
      >
        {(formik) => (
          <Form
            onSubmit={formik.handleSubmit}
            className="flex flex-col items-center justify-evenly min-h-screen px-2 space-y-3 md:space-y-0"
          >
            <h1 className="text-3xl sm:text-5xl font-bold italic tracking-wide">
              Melkein valmista
            </h1>

            <div
              id="form-content-wrapper"
              className="md:flex md:space-x-20 space-y-10 md:space-y-0"
            >
              {/**Text fields and Image */}
              <div className="flex flex-col items-center space-y-3 md:space-y-5">
                <Input name="name" label="Etunimesi" />
                <Input name="age" type="number" label="Ikäsi" />
                <Input name="email" label="Sähköpostiosoite" />

                {/**Image ref*/}
                <div>
                  <input
                    name="image"
                    ref={filePickerRef}
                    type="file"
                    hidden
                    onChange={(e) => {
                      const reader = new FileReader();
                      if (e.target.files[0]) {
                        reader.readAsDataURL(e.target.files[0]);
                      }
                      reader.onload = (readerEvent) => {
                        setSelectedFile(readerEvent.target.result);
                        formik.setFieldValue(
                          "image",
                          readerEvent.target.result
                        );
                      };
                    }}
                  />
                </div>

                {/**Image */}
                <div>
                  {selectedFile ? (
                    <img
                      src={selectedFile}
                      className="h-32 object-contain cursor-pointer border-2 border-purple-500 rounded-xl"
                      onClick={() => setSelectedFile(null)}
                      alt="image to upload"
                    />
                  ) : (
                    <div>
                      <label
                        className="block font-semibold mb-1"
                        htmlFor="image"
                      >
                        Lataa profiilikuva
                      </label>
                      <div
                        onClick={() => filePickerRef.current.click()}
                        className="mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-red-100 cursor-pointer"
                      >
                        <CameraIcon
                          className="h-6 w-6 text-red-600"
                          aria-hidden="true"
                        />
                      </div>
                    </div>
                  )}
                </div>
                <ErrorMessage name="image" component={TextError} />
              </div>

              {/**Select fields */}
              <div className="flex flex-col space-y-3 md:space-y-5">
                <div>
                  <label className="block font-semibold mb-1" htmlFor="school">
                    Missä opiskelet
                  </label>
                  <Field
                    name="school"
                    options={schools}
                    component={CustomSelect}
                  />
                  <ErrorMessage name="school" component={TextError} />
                </div>
                <div>
                  <label
                    className="block font-semibold mb-1"
                    htmlFor="lookingForSchools"
                  >
                    Mistä kouluista etsit ihmisiä
                  </label>
                  <Field
                    name="lookingForSchools"
                    options={schools}
                    component={CustomSelect}
                    isMulti
                  />
                  <ErrorMessage
                    name="lookingForSchools"
                    component={TextError}
                  />
                </div>

                <div>
                  <label className="block font-semibold mb-1" htmlFor="gender">
                    Sukupuolesi
                  </label>
                  <Field
                    className=""
                    name="gender"
                    options={schools}
                    component={CustomSelect}
                  />
                  <ErrorMessage name="gender" component={TextError} />
                </div>
                <div>
                  <label
                    className="block font-semibold mb-1"
                    htmlFor="lookingForGender"
                  >
                    Mitä sukupuolta haet
                  </label>
                  <Field
                    name="lookingForGender"
                    options={schools}
                    component={CustomSelect}
                  />
                  <ErrorMessage name="lookingForGender" component={TextError} />
                </div>
              </div>
            </div>

            {/**Buttons */}
            <div className="flex flex-col space-y-4">
              <button
                type="submit"
                className="uppercase mt-5 text-sm font-bold tracking-wide bg-gradient-to-r from-indigo-500 to-purple-500 text-gray-100 py-3 px-20 rounded-lg focus:outline-none focus:shadow-outline hover:shadow-xl active:scale-90 transition duration-150"
              >
                Viimeistele!
              </button>
              <button
                type="button"
                className="text-sm transition ease-in-out hover:scale-105"
              >
                Minulla on jo tili
              </button>
            </div>
          </Form>
        )}
      </Formik>
    </div>
  );
}
